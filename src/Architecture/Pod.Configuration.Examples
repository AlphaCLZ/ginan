
/** \file

Examples of basic `pod` use-cases and configuration file templates for their use.

*/


/** Dynamic orbit determination for the GPS constellation over a 24 hour arc.


The full gravitational force models are applied, with a cannonball model SRP model.

To run the POD, change to the Ginan examples directory, then ...

    ../bin/pod -y ex21_pod_fit_gps.yaml


This should output the following to stdout (first satellite (G01) only shown)

```
PRN: G01, SVN:  63, BLK TYP: GPS-IIF, BLKID:   8, TX PWR: 240, MASS: 1633.000
IC:    57842.000000000000        0.0000000000000000        13449938.290000001       -15187647.773999998        16895359.906999998       -59.097715290263295        2181.6586220953614        2021.8495117835701
Orbit Determination
day of year        2017          89 G01  beta   58.757853105247371
ECOM1 SRP MODEL IS ACTIVATED
Orbit residuals: ICRF
RMS-XYZ ICRF FIT G01        0.0050        0.0035        0.0031
External Orbit comparison
Orbit comparison: ICRF
RMS-RTN ICRF CMP G01        0.0037        0.0035        0.0046
RMS-XYZ ICRF CMP G01        0.0050        0.0035        0.0031
Orbit comparison: ITRF
RMS-XYZ ITRF CMP G01        0.0043        0.0044        0.0031
```
  
The results above show that our orbits arcs, over 24 hours, are currently within 0.5 cm of the final combined IGS orbit.

The processing also produces the following output files in the yaml specified output directory (ex21 in this case)

    ├── POD.status        processing report file
    ├── gagWWWWD.erp      Earth Rotation Parameters file
    ├── gagWWWWD.obx      ORBEX file resulting from the integration
    ├── gagWWWWD.sp3      sp3 file from all integration steps (backwards, fitting, prediction)
    ├── gagWWWWD_orbits_partials.out     output IC file for pea
    ├── gagWWWWD_igsWWWWD_orbdiff_rtn.out      differences in solutions in orbital frame components
    ├── gagWWWWD_igsWWWWD_orbitstat_(R|T|N).out      statistical differences in solutions in orbital frame components


`ex21_pod_fit_gps.yaml`

\include "ex21_pod_fit_gps.yaml"

 */
example Configure_ex21_yaml()
{
	Pod_Configuration();
}










/** Dynamic orbit determination using ECOM2 for the GPS constellation over a 24 hour arc.

This yaml file has ECOM2 selected (see the SRP model selection). It runs over all the gnss constellations, and will take about 10 minutes to run.

    bin/pod -y ex22_pod_fit_gnss.yaml

This should output the following to stdout (G02 output selected)

```
PRN: G02, SVN:  61, BLK TYP: GPS-IIR-B, BLKID:   6, TX PWR:  60, MASS: 1080.000
IC:    58682.000000000000        0.0000000000000000        20561552.770000000       -13147270.275999999       -9692254.6860000007       -649.18898038938642        1190.7695703040808       -2831.8342814706266
Orbit Determination
day of year        2019         199 G02  beta  -22.344868611303600
ECOM2 SRP MODEL IS ACTIVATED
Orbit residuals: ICRF
RMS-XYZ ICRF FIT G02        0.0055        0.0035        0.0035
External Orbit comparison
Orbit comparison: ICRF
RMS-RTN ICRF CMP G02        0.0043        0.0029        0.0052
RMS-XYZ ICRF CMP G02        0.0055        0.0035        0.0035
Orbit comparison: ITRF
RMS-XYZ ITRF CMP G02        0.0042        0.0050        0.0035
```

`ex22_pod_fit_gnss.yaml`

\include "ex22_pod_fit_gnss.yaml"

 */
example Configure_ex22_yaml()
{
	Pod_Configuration();
}







/** GPS IGS SP3 file orbit fitting, orbit prediction and comparison to next IGS SP3 file.

`ex23_pod_prd_gps.yaml`

\include "ex23_pod_prd_gps.yaml"

 */
example Configure_ex23_yaml()
{
	Pod_Configuration();
}




/** Integration of POD initial conditions file generated by the PEA.

`ex24_pod_ic_gps.yaml`

\include "ex24_pod_ic_gps.yaml"

 */
example Configure_ex24_yaml()
{
	Pod_Configuration();
}




/** ECOM1+ECOM2 hybrid SRP model

`ex25_pod_fit_gps.yaml`

\include "ex25_pod_fit_gps.yaml"

 */
example Configure_ex25_yaml()
{
	Pod_Configuration();
}




/** Week long integration of a middle earth orbit satellite (L51)

`ex26_pod_fit_meo.yaml`

\include "ex26_pod_fit_meo.yaml"

 */
example Configure_ex26_yaml()
{
	Pod_Configuration();
}




